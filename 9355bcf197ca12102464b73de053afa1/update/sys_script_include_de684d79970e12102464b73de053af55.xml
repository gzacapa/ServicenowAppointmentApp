<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1557275_appoin_0.ApppointmentAppUtilsServer</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ApppointmentAppUtilsServer</name>
        <script><![CDATA[var ApppointmentAppUtilsServer = Class.create();
ApppointmentAppUtilsServer.prototype = {
    initialize: function() {},
    generateTimeSlots: function(roomSysId) {
        try {

            var result = false; // Initialize result as false

            // Retrieve the room record
            var room = new GlideRecord('x_1557275_appoin_0_room');
            if (!room.get(roomSysId)) {
                gs.error("Room not found");
                return result;
            }

            // Get room name, start, and end times
            var roomName = room.getValue('room_name');
            var startTime = new GlideDateTime(room.getValue('available_start'));
            var endTime = new GlideDateTime(room.getValue('available_end'));

            // Loop to create one-hour time slots
            while (startTime.getDisplayValue() < endTime.getDisplayValue()) {
                // Format start time as string for slot name
                var slotHour = startTime.getDisplayValueInternal().substring(11, 16); // Extracts 'HH:mm' format

                // Create a new time slot record
                var slot = new GlideRecord('x_1557275_appoin_0_room_time_slot');
                slot.initialize();
                slot.setValue('room', roomSysId);
                slot.setValue('start_time', startTime);

                // Set end time for the slot (1 hour after start time)
                var slotEndTime = new GlideDateTime(startTime);
                slotEndTime.addSeconds(3600);
                slot.setValue('end_time', slotEndTime);

                // Set the slot name with room name and hour
                slot.setValue('name', roomName + ' slot for ' + slotHour);

                // Insert the time slot record
                slot.insert();

                // Update result to true as at least one slot was created
                result = true;

                // Increment startTime by 1 hour
                startTime.addSeconds(3600);
            }

            return result; // Return true if slots were created, false otherwise
        } catch (error) {
            gs.log(error);
        }
    },
    
    type: 'ApppointmentAppUtilsServer'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-24 02:31:31</sys_created_on>
        <sys_id>de684d79970e12102464b73de053af55</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>ApppointmentAppUtilsServer</sys_name>
        <sys_package display_value="Appointment App" source="x_1557275_appoin_0">9355bcf197ca12102464b73de053afa1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Appointment App">9355bcf197ca12102464b73de053afa1</sys_scope>
        <sys_update_name>sys_script_include_de684d79970e12102464b73de053af55</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-24 08:29:25</sys_updated_on>
    </sys_script_include>
</record_update>
